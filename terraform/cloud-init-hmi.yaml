#cloud-config
package_update: true
packages:
  - python3-pip
  - python3-dev
  - git
  - openssh-client

runcmd:
  # 1) SSH keys for private GitHub access
  - mkdir -p /home/azureuser/.ssh
  - |
    cat << 'EOF' > /home/azureuser/.ssh/id_rsa
    -----BEGIN OPENSSH PRIVATE KEY-----
    YOUR_PRIVATE_KEY_HERE
    -----END OPENSSH PRIVATE KEY-----
    EOF
  - chmod 600 /home/azureuser/.ssh/id_rsa
  - ssh-keyscan github.com >> /home/azureuser/.ssh/known_hosts
  - chown -R azureuser:azureuser /home/azureuser/.ssh

  # 2) Clone repo and install dependencies
  - mkdir -p /opt/ota-update-azure/hmi_server /opt/ota-update-azure/data
  - chown -R azureuser:azureuser /opt/ota-update-azure
  - sudo -u azureuser git clone git@github.com:KareemMoataz02/ota-update-azure.git /opt/ota-update-azure/hmi_server
  - cd /opt/ota-update-azure/hmi_server
  - pip3 install --upgrade pip
  - pip3 install -r requirements.txt dataclasses

  # 3) Create systemd service
  - |
    cat << 'EOF' | sudo tee /etc/systemd/system/hmi_server.service
    [Unit]
    Description=HMI Update Server (Python main.py)
    After=network.target

    [Service]
    User=azureuser
    WorkingDirectory=/opt/ota-update-azure/hmi_server/hmi_server

    Environment="HOST=${hmi_server_host}"
    Environment="PORT=${hmi_server_port}"
    Environment="DATA_DIR=${hmi_data_directory}"

    Environment="MONGO_URI=${mongodb_uri}"
    Environment="MONGO_DB=${mongodb_database}"
    Environment="MONGO_COLLECTION=${mongodb_collection}"
    Environment="MONGO_USER=${mongodb_user}"
    Environment="MONGO_PASSWORD=${mongodb_password}"

    Environment="HEX_STORAGE_ACCOUNT_NAME=${hex_storage_account_name}"
    Environment="HEX_STORAGE_CONTAINER_NAME=${hex_storage_container_name}"
    Environment="HEX_STORAGE_ACCOUNT_KEY=${hex_storage_account_key}"

    ExecStart=/usr/bin/python3 /opt/ota-update-azure/hmi_server/hmi_server/main.py \
      --host \${HOST} \
      --port \${PORT} \
      --data-dir \${DATA_DIR}

    Restart=always
    RestartSec=5

    [Install]
    WantedBy=multi-user.target
    EOF

  - sudo systemctl daemon-reload
  - sudo systemctl enable hmi_server.service
  - sudo systemctl start hmi_server.service
