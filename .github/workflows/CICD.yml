name: CI/CD OTA Update Azure

on:
  push:
    branches: [ main ]

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      website_changed: ${{ steps.filter.outputs.website }}
    steps:
      - uses: actions/checkout@v3
      - name: Filter website_app changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            website:
              - 'website_app/**'

  docker-build:
    needs: filter
    if: needs.filter.outputs.website_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & push BACKEND image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: website_app/backend_server/DockerFile
          push: true
          tags: |
            kareemmoataz13/ota-backend:latest
            kareemmoataz13/ota-backend:${{ github.sha }}

      - name: Build & push FRONTEND image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: website_app/frontend/DockerFile
          push: true
          tags: |
            kareemmoataz13/ota-frontend:latest
            kareemmoataz13/ota-frontend:${{ github.sha }}

  # terraform-deploy:
  #   runs-on: ubuntu-latest
  #   needs: filter
  #   if: always()
  #   env:
  #     ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  #     ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  #     ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  #     ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3

  #     - name: Azure CLI Login
  #       run: |
  #         az login --service-principal \
  #           -u ${{ secrets.ARM_CLIENT_ID }} \
  #           -p ${{ secrets.ARM_CLIENT_SECRET }} \
  #           --tenant ${{ secrets.ARM_TENANT_ID }}

  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2
  #       with:
  #         terraform_version: 1.5.0

  #     - name: Terraform Init
  #       working-directory: terraform
  #       run: terraform init -migrate-state

  #     - name: Terraform Plan
  #       working-directory: terraform
  #       run: terraform plan

  #     - name: Terraform Apply
  #       working-directory: terraform
  #       run: terraform apply -auto-approve
