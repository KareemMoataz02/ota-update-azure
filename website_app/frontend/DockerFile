# ------------------------------
# 1) Build stage
# ------------------------------
FROM node:20-slim AS build

# Install Python & C toolchain for any native modules
RUN apt-get update \
  && apt-get install -y --no-install-recommends python3 build-essential \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /src

# Copy only package manifests for cacheable dependency install
COPY website_app/frontend/package*.json ./

# Install exact deps via lockfile
RUN npm ci

# remove any host modules that got copied over
RUN rm -rf node_modules

# Copy rest of the source and build
COPY website_app/frontend/ .
RUN npm run build         # outputs to /src/dist (or /src/build for CRA)

# ------------------------------
# 2) Production stage
# ------------------------------
FROM nginx:alpine

# Copy built assets into NGINXâ€™s html folder
COPY --from=build /src/dist /usr/share/nginx/html

# SPA fallback: serve index.html for all non-file routes
RUN printf '\
  server {\n\
  listen       80;\n\
  server_name  _;\n\
  \n\
  root   /usr/share/nginx/html;\n\
  index  index.html;\n\
  \n\
  location / {\n\
  try_files $uri $uri/ /index.html;\n\
  }\n\
  \n\
  error_page 404 /index.html;\n\
  }\n' > /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]

